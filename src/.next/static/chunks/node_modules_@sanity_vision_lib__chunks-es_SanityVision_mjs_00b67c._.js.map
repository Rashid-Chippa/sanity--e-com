{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"SanityVision.mjs","sources":["file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/apiVersions.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/DelayedSpinner.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/codemirror/extensions.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/codemirror/useCodemirrorTheme.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/codemirror/VisionCodeMirror.styled.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/codemirror/VisionCodeMirror.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/perspectives.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/encodeQueryString.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/getBlobUrl.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/isPlainObject.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/localStorage.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/parseApiQueryString.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/prefixApiVersion.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/resizeObserver.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/tryParseParams.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/util/validateApiVersion.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/ParamsEditor.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/PerspectivePopover.styled.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/PerspectivePopover.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/QueryErrorDialog.styled.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/QueryErrorDetails.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/QueryErrorDialog.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/ResultView.styled.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/ResultView.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/SaveResultButtons.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/VisionGui.styled.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/components/VisionGui.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/hooks/useDatasets.ts","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/containers/VisionContainer.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/containers/VisionErrorBoundary.tsx","file://D%3A/e-com-hackathon/node_modules/%40sanity/vision/src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21', 'v2022-03-07']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {type ReactCodeMirrorProps} from '@uiw/react-codemirror'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\n\nexport type SupportedPerspective = 'raw' | 'previewDrafts' | 'published' | 'drafts'\n\nexport const SUPPORTED_PERSPECTIVES = [\n  'raw',\n  'previewDrafts',\n  'published',\n  'drafts',\n] satisfies ClientPerspective[]\nexport const DEFAULT_PERSPECTIVE = SUPPORTED_PERSPECTIVES[0]\n\nexport function isSupportedPerspective(p: string): p is SupportedPerspective {\n  return SUPPORTED_PERSPECTIVES.includes(p as SupportedPerspective)\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {type ClipboardEvent, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n  onPasteCapture: (event: ClipboardEvent<HTMLDivElement>) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange, onPasteCapture} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return (\n    <VisionCodeMirror\n      value={props.value || defaultValue}\n      onChange={handleChange}\n      onPasteCapture={onPasteCapture}\n    />\n  )\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {Badge, Button, Card, Inline, Popover, Stack, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useRef, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutsideEvent(\n    () => setOpen(false),\n    () => [buttonRef.current, popoverRef.current],\n  )\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n              <Badge tone=\"primary\">{t('label.new')}</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={popoverRef}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={buttonRef}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {LinkIcon} from '@sanity/icons'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\nimport {useDataset} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown; datasetName: string}): React.JSX.Element {\n  const {data, datasetName} = props\n  const workspaceDataset = useDataset()\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JsonInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n          interactiveLabel={workspaceDataset === datasetName ? DocumentEditLabel : undefined}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction DocumentEditLabel(props: {value: string; isKey: boolean; keypath: string}) {\n  if (props.isKey || (!props.keypath.endsWith('_id') && !props.keypath.endsWith('_ref'))) {\n    return null\n  }\n\n  return (\n    <IntentLink intent=\"edit\" params={{id: props.value}}>\n      <LinkIcon />\n    </IntentLink>\n  )\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport {SplitPane} from '@rexxars/react-split-pane'\nimport {type ListenEvent, type MutationEvent, type SanityClient} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {debounce} from 'lodash'\nimport {type ChangeEvent, createRef, PureComponent, type RefObject} from 'react'\nimport {type TFunction, Translate} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {\n  DEFAULT_PERSPECTIVE,\n  isSupportedPerspective,\n  SUPPORTED_PERSPECTIVES,\n  type SupportedPerspective,\n} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  ControlsContainer,\n  DownloadsCard,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SaveResultLabel,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: SupportedPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement | null>\n  _queryEditorContainer: RefObject<HTMLDivElement | null>\n  _paramsEditorContainer: RefObject<HTMLDivElement | null>\n  _operationUrlElement: RefObject<HTMLInputElement | null>\n  _customApiVersionElement: RefObject<HTMLInputElement | null>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!SUPPORTED_PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: perspective,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = debounce(this.handleQueryChange, 300).bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.handleOnPasteCapture = this.handleOnPasteCapture.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: React.ClipboardEvent<HTMLDivElement> | ClipboardEvent, stopPropagation = false) {\n    if (!evt?.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective = isSupportedPerspective(parts.options.perspective)\n      ? parts.options.perspective\n      : undefined\n\n    if (perspective && !isSupportedPerspective(perspective)) {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-paste-unsupported-perspective',\n        status: 'warning',\n        title: 'Perspective in pasted url is currently not supported. Falling back to \"raw\"',\n      })\n    }\n\n    evt.preventDefault()\n    if (stopPropagation) {\n      // Stops propagation for the pasteEvent that occurs in the CodeMirror element if it has a match\n      evt.stopPropagation()\n    }\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  handleOnPasteCapture(ev: React.ClipboardEvent<HTMLDivElement>) {\n    this.handlePaste(ev, true)\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    if (!isSupportedPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: this.state.perspective,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective = this.state.perspective\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n    const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n    const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {SUPPORTED_PERSPECTIVES.map((p) => (\n                    <option key={p}>{p}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split=\"horizontal\"\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror\n                      value={query}\n                      onChange={this.handleQueryChange}\n                      onPasteCapture={this.handleOnPasteCapture}\n                    />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor\n                      value={rawParams}\n                      onChange={this.handleParamsChange}\n                      onPasteCapture={this.handleOnPasteCapture}\n                    />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} datasetName={dataset} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} datasetName={dataset} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n\n                {hasResult && (\n                  <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n                    <SaveResultLabel muted>\n                      <Translate\n                        components={{\n                          SaveResultButtons: () => (\n                            <>\n                              <SaveJsonButton blobUrl={jsonUrl} />\n                              <SaveCsvButton blobUrl={csvUrl} />\n                            </>\n                          ),\n                        }}\n                        i18nKey=\"result.save-result-as-format\"\n                        t={t}\n                      />\n                    </SaveResultLabel>\n                  </DownloadsCard>\n                )}\n              </ResultFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {Flex, useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <DelayedSpinner />\n      </Flex>\n    )\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occurred</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","$","_c","show","setShow","useState","t0","t1","delay","timer","setTimeout","clearTimeout","useEffect","t2","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","key","run","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","createTheme","cmTheme","t3","createHighlight","cmHighlight","t4","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","div","space","VisionCodeMirror","sanityTheme","useTheme","SUPPORTED_PERSPECTIVES","DEFAULT_PERSPECTIVE","isSupportedPerspective","p","includes","encodeQueryString","query","params","options","searchParams","URLSearchParams","set","value","Object","entries","JSON","stringify","getBlobUrl","content","mimeType","URL","createObjectURL","Blob","type","getMemoizedBlobUrlResolver","stringEncoder","prevResult","prevContent","input","revokeObjectURL","getJsonBlobUrl","getCsvBlobUrl","json2csv","Array","isArray","trim","isPlainObject","obj","prototype","toString","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","length","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","state","ensureState","setItem","loadState","stored","parse","getItem","mod","parseApiQueryString","qs","prefixApiVersion","version","RO","document","ResizeObserverPolyfill","window","ResizeObserver","tryParseParams","val","parsed","JSON5","err","message","replace","validateApiVersion","apiVersion","parseableApiVersion","toUpperCase","test","isNaN","Date","defaultValue","ParamsEditor","onChange","onPasteCapture","useTranslation","visionLocaleNamespace","eventFromValue","raw","error","valid","isValid","setValid","init","setInit","newValue","event","handleChangeRaw","t5","debounce","handleChange","t6","t7","parsedParams","Error","validationError","undefined","PerspectivePopoverContent","Box","PerspectivePopoverLink","a","PerspectivePopover","open","setOpen","buttonRef","useRef","popoverRef","Symbol","for","_temp","handleClick","current","useClickOutsideEvent","t8","t9","t10","t11","t12","t13","HelpCircleIcon","t14","o","ErrorCode","Code","muted","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","css","lru","LRU","maxSize","ResultView","data","datasetName","workspaceDataset","useDataset","isRecord","DocumentEditLabel","isExpanded","toggleExpanded","isKey","keypath","endsWith","id","keyPath","cached","segments","split","depthLimit","some","isArrayKeyOverLimit","path","numeric","segment","limit","parseInt","preventSave","evt","preventDefault","SaveCsvButton","blobUrl","isDisabled","DocumentSheetIcon","button","SaveJsonButton","Root","Flex","displayName","Header","Card","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","Result","ResultFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","DownloadsCard","SaveResultLabel","Text","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","size","allowResize","minSize","Math","min","max","VisionGui","PureComponent","constructor","client","datasets","config","_localStorage","projectId","defaultDataset","dataset","defaultApiVersion","defaultPerspective","lastQuery","lastParams","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","isValidApiVersion","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","handleOnPasteCapture","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","stopPropagation","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","warn","toast","push","closable","status","title","ev","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","target","toLowerCase","focus","isWithinRoot","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","el","select","execCommand","console","render","hasResult","jsonUrl","csvUrl","map","ds","CopyIcon","StopIcon","PlayIcon","SaveResultButtons","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","VisionErrorBoundary","Component","numRetries","getDerivedStateFromError","handleRetryRender","prev","handleRetryWithCacheClear","children","withCacheClear","SanityVision","useClient","tool"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}},
    {"offset": {"line": 1925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}