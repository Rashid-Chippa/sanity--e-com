{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/e-com-hackathon/src/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-01-17'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AACE;AADK,MAAM,aACX,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/e-com-hackathon/src/sanity/schemaTypes/chefs.ts"],"sourcesContent":["export default {\r\n    name: 'chefs',\r\n    type: 'document',\r\n    title: 'Chef',\r\n    fields: [\r\n      {\r\n        name: 'name',\r\n        type: 'string',\r\n        title: 'Chef Name',\r\n      },\r\n      {\r\n        name: 'position',\r\n        type: 'string',\r\n        title: 'Position',\r\n        description: 'Role or title of the chef (e.g., Head Chef, Sous Chef)',\r\n      },\r\n      {\r\n        name: 'experience',\r\n        type: 'number',\r\n        title: 'Years of Experience',\r\n        description: 'Number of years the chef has worked in the culinary field',\r\n      },\r\n      {\r\n        name: 'specialty',\r\n        type: 'string',\r\n        title: 'Specialty',\r\n        description: 'Specialization of the chef (e.g., Italian Cuisine, Pastry)',\r\n      },\r\n      {\r\n        name: 'image',\r\n        type: 'image',\r\n        title: 'Chef Image',\r\n        options: {\r\n          hotspot: true,\r\n        },\r\n      },\r\n      {\r\n        name: 'description',\r\n        type: 'text',\r\n        title: 'Description',\r\n        description: 'Short bio or introduction about the chef',\r\n      },\r\n      {\r\n        name: 'available',\r\n        type: 'boolean',\r\n        title: 'Currently Active',\r\n        description: 'Availability status of the chef',\r\n      },\r\n    ],\r\n  };"],"names":[],"mappings":";;;uCAAe;IACX,MAAM;IACN,MAAM;IACN,OAAO;IACP,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,SAAS;gBACP,SAAS;YACX;QACF;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;KACD;AACH"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file://D%3A/e-com-hackathon/src/sanity/schemaTypes/foods.ts"],"sourcesContent":["export default {\r\n    name: 'foods',\r\n    type: 'document',\r\n    title: 'Food',\r\n    fields: [\r\n      {\r\n        name: 'name',\r\n        type: 'string',\r\n        title: 'Food Name',\r\n      },\r\n      {\r\n        name: 'category',\r\n        type: 'string',\r\n        title: 'Category',\r\n        description:\r\n          'Category of the food item (e.g., Burger, Sandwich, Drink, etc.)',\r\n      },\r\n      {\r\n        name: 'price',\r\n        type: 'number',\r\n        title: 'Current Price',\r\n      },\r\n      {\r\n        name: 'originalPrice',\r\n        type: 'number',\r\n        title: 'Original Price',\r\n        description: 'Price before discount (if any)',\r\n      },\r\n      {\r\n        name: 'tags',\r\n        type: 'array',\r\n        title: 'Tags',\r\n        of: [{ type: 'string' }],\r\n        options: {\r\n          layout: 'tags',\r\n        },\r\n        description: 'Tags for categorization (e.g., Best Seller, Popular, New)',\r\n      },\r\n      {\r\n        name: 'image',\r\n        type: 'image',\r\n        title: 'Food Image',\r\n        options: {\r\n          hotspot: true,\r\n        },\r\n      },\r\n      {\r\n        name: 'description',\r\n        type: 'text',\r\n        title: 'Description',\r\n        description: 'Short description of the food item',\r\n      },\r\n      {\r\n        name: 'available',\r\n        type: 'boolean',\r\n        title: 'Available',\r\n        description: 'Availability status of the food item',\r\n      },\r\n    ],\r\n  };"],"names":[],"mappings":";;;uCAAe;IACX,MAAM;IACN,MAAM;IACN,OAAO;IACP,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aACE;QACJ;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;QACT;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,IAAI;gBAAC;oBAAE,MAAM;gBAAS;aAAE;YACxB,SAAS;gBACP,QAAQ;YACV;YACA,aAAa;QACf;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,SAAS;gBACP,SAAS;YACX;QACF;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;QACA;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACf;KACD;AACH"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://D%3A/e-com-hackathon/src/sanity/schemaTypes/index.ts"],"sourcesContent":["import { type SchemaTypeDefinition } from 'sanity'\nimport chef from './chefs'\nimport food from './foods'\n\nexport const schema: { types: SchemaTypeDefinition[] } = {\n  types: [chef, food],\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEO,MAAM,SAA4C;IACvD,OAAO;QAAC,wIAAA,CAAA,UAAI;QAAE,wIAAA,CAAA,UAAI;KAAC;AACrB"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file://D%3A/e-com-hackathon/src/sanity/structure.ts"],"sourcesContent":["import type {StructureResolver} from 'sanity/structure'\n\n// https://www.sanity.io/docs/structure-builder-cheat-sheet\nexport const structure: StructureResolver = (S) =>\n  S.list()\n    .title('Content')\n    .items(S.documentTypeListItems())\n"],"names":[],"mappings":";;;AAGO,MAAM,YAA+B,CAAC,IAC3C,EAAE,IAAI,GACH,KAAK,CAAC,WACN,KAAK,CAAC,EAAE,qBAAqB"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://D%3A/e-com-hackathon/sanity.config.ts"],"sourcesContent":["'use client'\n\n/**\n * This configuration is used to for the Sanity Studio thatâ€™s mounted on the `\\src\\app\\studio\\[[...tool]]\\page.tsx` route\n */\n\nimport {visionTool} from '@sanity/vision'\nimport {defineConfig} from 'sanity'\nimport {structureTool} from 'sanity/structure'\n\n// Go to https://www.sanity.io/docs/api-versioning to learn how API versioning works\nimport {apiVersion, dataset, projectId} from './src/sanity/env'\nimport {schema} from './src/sanity/schemaTypes'\nimport {structure} from './src/sanity/structure'\n\nexport default defineConfig({\n  basePath: '/studio',\n  projectId,\n  dataset,\n  // Add and edit the content schema in the './sanity/schemaTypes' folder\n  schema,\n  plugins: [\n    structureTool({structure}),\n    // Vision is for querying with GROQ from inside the Studio\n    // https://www.sanity.io/docs/the-vision-plugin\n    visionTool({defaultApiVersion: apiVersion}),\n  ],\n})\n"],"names":[],"mappings":";;;AAUA,oFAAoF;AACpF;AACA;AACA;AANA;AACA;AANA;;CAEC,GAED;AANA;;;;;;;uCAee,CAAA,GAAA,0JAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,UAAU;IACV,WAAA,uHAAA,CAAA,YAAS;IACT,SAAA,uHAAA,CAAA,UAAO;IACP,uEAAuE;IACvE,QAAA,wIAAA,CAAA,SAAM;IACN,SAAS;QACP,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE;YAAC,WAAA,6HAAA,CAAA,YAAS;QAAA;QACxB,0DAA0D;QAC1D,+CAA+C;QAC/C,CAAA,GAAA,uKAAA,CAAA,aAAU,AAAD,EAAE;YAAC,mBAAmB,uHAAA,CAAA,aAAU;QAAA;KAC1C;AACH"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}