{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file://D%3A/e-com-hackathon/node_modules/sanity/src/structure/panes/userComponent/UserComponentPaneContent.tsx","file://D%3A/e-com-hackathon/node_modules/sanity/src/structure/panes/userComponent/UserComponentPaneHeader.tsx","file://D%3A/e-com-hackathon/node_modules/sanity/src/structure/panes/userComponent/UserComponentPane.tsx"],"sourcesContent":["import {Box} from '@sanity/ui'\nimport {type ReactNode} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePane} from '../../components'\n\ninterface UserComponentPaneContentProps {\n  children: ReactNode\n}\n\nconst Root = styled(Box)`\n  position: relative;\n`\n\nexport function UserComponentPaneContent(props: UserComponentPaneContentProps) {\n  const {children} = props\n  const {collapsed} = usePane()\n\n  return (\n    <Root hidden={collapsed} height=\"fill\" overflow=\"auto\">\n      {children}\n    </Root>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\n\nimport {Button} from '../../../ui-components'\nimport {BackLink, PaneHeader, PaneHeaderActions} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface UserComponentPaneHeaderProps {\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport function UserComponentPaneHeader(props: UserComponentPaneHeaderProps) {\n  const {actionHandlers, index, menuItems, menuItemGroups, title} = props\n  const {features} = useStructureTool()\n\n  if (!menuItems?.length && !title) {\n    return null\n  }\n\n  return (\n    <PaneHeader\n      actions={\n        <PaneHeaderActions\n          menuItems={menuItems}\n          menuItemGroups={menuItemGroups}\n          actionHandlers={actionHandlers}\n        />\n      }\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      title={title}\n    />\n  )\n}\n","import {isValidElement, useState} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {useI18nText} from 'sanity'\n\nimport {Pane} from '../../components'\nimport {type StructureToolPaneActionHandler} from '../../types'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {UserComponentPaneContent} from './UserComponentPaneContent'\nimport {UserComponentPaneHeader} from './UserComponentPaneHeader'\n\ntype UserComponentPaneProps = BaseStructureToolPaneProps<'component'>\n\n/**\n * @internal\n */\nexport function UserComponentPane(props: UserComponentPaneProps) {\n  const {index, pane, paneKey, ...restProps} = props\n  const {\n    child,\n    component: UserComponent,\n    menuItems,\n    menuItemGroups,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type: _unused,\n    ...restPane\n  } = pane\n  const [ref, setRef] = useState<{\n    actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  } | null>(null)\n  const {title = ''} = useI18nText(pane)\n\n  return (\n    <Pane id={paneKey} minWidth={320} selected={restProps.isSelected}>\n      <UserComponentPaneHeader\n        actionHandlers={ref?.actionHandlers}\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <UserComponentPaneContent>\n        {isValidElementType(UserComponent) && (\n          <UserComponent\n            {...restProps}\n            {...restPane}\n            // NOTE: here we're utilizing the function form of refs so setting\n            // the ref causes a re-render for `UserComponentPaneHeader`\n            ref={setRef as any}\n            child={child}\n            paneKey={paneKey}\n          />\n        )}\n        {isValidElement(UserComponent) && UserComponent}\n      </UserComponentPaneContent>\n    </Pane>\n  )\n}\n"],"names":["Root","styled","Box","UserComponentPaneContent","props","$","_c","children","collapsed","usePane","t0","UserComponentPaneHeader","actionHandlers","index","menuItems","menuItemGroups","title","features","useStructureTool","length","t1","backButton","BackLink","ArrowLeftIcon","content","t2","UserComponentPane","pane","paneKey","restProps","UserComponent","child","restPane","component","t3","type","_unused","t4","ref","setRef","useState","useI18nText","undefined","isValidElementType","isValidElement","t5","t6","isSelected"],"mappings":"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","ignoreList":[0,1,2]}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}